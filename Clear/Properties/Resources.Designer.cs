//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clear.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Clear.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///chcp 65001
        ///
        ///taskkill /IM &quot;iikoFront.Net.exe&quot;
        ///
        ///taskkill /IM &quot;IIKOCustomerDisplay.Front.exe&quot;
        ///
        ///NET STOP iikoCard5POS
        ///
        ///NET STOP iikoNetService
        ///
        ///net stop wuauserv
        ///sc config wuauserv start=disabled
        ///
        ///timeout /t 5
        ///
        ///
        ///net start w32time
        ///Запускаю синхронизацию
        ///w32tm /resync
        ///
        ///
        ///
        ///del /f /s /q &quot;%appdata%\iiko\CashServer\Logs&quot;
        ///
        ///
        ///del /f /s /q &quot;C:\Users\iikoCard5POS\AppData\Roaming\iiko\iikoCard5&quot;
        ///del /f /s /q &quot;C:\Windows\ServiceProfiles\iikoCard5POS\AppData\Roaming\iiko\iikoCard5\&quot;
        ///
        ///net [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string clean_all {
            get {
                return ResourceManager.GetString("clean_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///
        ///taskkill /IM &quot;iikoFront.Net.exe&quot;
        ///
        ///taskkill /IM &quot;IIKOCustomerDisplay.Front.exe&quot;
        ///
        ///NET STOP iikoCard5POS
        ///
        ///net stop wuauserv
        ///sc config wuauserv start=disabled
        ///timeout /t 5
        ///
        ///net start w32time
        ///Запускаю синхронизацию
        ///w32tm /resync
        ///
        ///del /f /s /q &quot;%appdata%\iiko\CashServer\Logs&quot;
        ///
        ///del /f /s /q &quot;C:\Users\iikoCard5POS\AppData\Roaming\iiko\iikoCard5&quot;
        ///del /f /s /q &quot;C:\Windows\ServiceProfiles\iikoCard5POS\AppData\Roaming\iiko\iikoCard5\&quot;
        ///
        ///netsh http add urlacl url=http://+:7001/ user=Everyo [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string clean_wo_pl {
            get {
                return ResourceManager.GetString("clean_wo_pl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap clear_bat {
            get {
                object obj = ResourceManager.GetObject("clear_bat", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap clear_cat {
            get {
                object obj = ResourceManager.GetObject("clear_cat", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///taskkill /IM &quot;iikoFront.Net.exe&quot;
        ///taskkill /IM &quot;IIKOCustomerDisplay.Front.exe&quot;
        ///del /f /s /q &quot;C:\ProgramData\iiko\CustomerDisplayScreen&quot;
        ///RD %SystemDrive%\RECYCLER /Q/S
        ///exit.
        /// </summary>
        internal static string clear_cds {
            get {
                return ResourceManager.GetString("clear_cds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap clear_cofee {
            get {
                object obj = ResourceManager.GetObject("clear_cofee", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///taskkill /IM &quot;iikoFront.Net.exe&quot;
        ///del /f /s /q &quot;%appdata%\iiko\CashServer\Logs&quot;
        ///RD %SystemDrive%\RECYCLER /Q/S
        ///cd %programdata%/cclear/
        ///exit.
        /// </summary>
        internal static string clear_front {
            get {
                return ResourceManager.GetString("clear_front", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///taskkill /IM &quot;iikoFront.Net.exe&quot;
        ///NET STOP iikoCard5POS
        ///del /f /s /q &quot;C:\Users\iikoCard5POS\AppData\Roaming\iiko\iikoCard5&quot;
        ///del /f /s /q &quot;C:\Windows\ServiceProfiles\iikoCard5POS\AppData\Roaming\iiko\iikoCard5\&quot;
        ///netsh http add urlacl url=http://+:7001/ user=Everyone
        ///netsh http add urlacl url=http://+:7001/ user=Все
        ///net localgroup &quot;Администраторы&quot; &quot;NT SERVICE\iikoCard5POS&quot; /add
        ///net localgroup &quot;Administrators&quot; &quot;NT SERVICE\iikoCard5POS&quot; /add
        ///RD %SystemDrive%\RECYCLER /Q/S
        ///NET START iikoCard5P [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string clear_iikocard {
            get {
                return ResourceManager.GetString("clear_iikocard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///chcp 65001
        ///Echo  Удалить системные файлы
        ///ECHO &quot;Чищу Windows (Обновления и файлы кеша)&quot;
        ///del %Temp%\*.* /S /F /Q
        ///del C:\Windows\Temp\*.* /S /F /Q
        ///SET Path2Del=C:\Windows\Temp\
        ///for /R &quot;%Path2Del%&quot; %%F in (.) DO IF NOT &quot;%%F&quot;==&quot;%Path2Del%.&quot; (RD /S /Q &quot;%%F&quot;) ELSE (Del /F /S /Q &quot;%Path2Del%*&quot;)
        ///SET Path2Del=%Temp%\
        ///for /R &quot;%Path2Del%&quot; %%F in (.) DO IF NOT &quot;%%F&quot;==&quot;%Path2Del%.&quot; (RD /S /Q &quot;%%F&quot;) ELSE (Del /F /S /Q &quot;%Path2Del%*&quot;)
        ///del c:\Windows\SoftwareDistribution\Download\*.* /f /s /q
        ///ECHO &quot;Готово [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string clear_system {
            get {
                return ResourceManager.GetString("clear_system", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap clear_ufo {
            get {
                object obj = ResourceManager.GetObject("clear_ufo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///cd C:/iiko_Distr
        ///Corflags.exe /32bit+ &quot;C:\Program Files\iiko\iikoRMS\Front.Net\iikoFront.Net.exe&quot;
        ///copy CorFlags.exe &quot;C:\Program Files\iiko\iikoRMS\Front.Net&quot;
        ///cd C:\Program Files\iiko\iikoRMS\Front.Net
        ///Corflags.exe /32bit+ iikoFront.Net.exe
        ///exit.
        /// </summary>
        internal static string corflags {
            get {
                return ResourceManager.GetString("corflags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///NET STOP iikoNetService
        ///cd C:\Program Files\iiko\Plazius.Pos
        ///start unistall.bat
        ///del /f /s /q &quot;C:\Program Files\iiko\Plazius.Pos&quot;
        ///RD %SystemDrive%\RECYCLER /Q/S
        ///exit.
        /// </summary>
        internal static string del_plazius {
            get {
                return ResourceManager.GetString("del_plazius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на start &quot;&quot; &quot;C:/iiko_Distr&quot;
        ///exit.
        /// </summary>
        internal static string folder_distr {
            get {
                return ResourceManager.GetString("folder_distr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на start &quot;&quot; &quot;C:\Users\iikoCard5POS\AppData\Roaming\iiko\iikoCard5&quot;
        ///start &quot;&quot; &quot;C:\Windows\ServiceProfiles\iikoCard5POS\AppData\Roaming\iiko\iikoCard5\&quot;
        ///exit.
        /// </summary>
        internal static string folder_iikocard {
            get {
                return ResourceManager.GetString("folder_iikocard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на start &quot;&quot; &quot;C:\Program Files\iiko\iikoRMS\Front.Net\&quot;
        ///exit.
        /// </summary>
        internal static string folder_iikofront {
            get {
                return ResourceManager.GetString("folder_iikofront", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на start &quot;&quot; &quot;%appdata%\iiko&quot;
        ///exit.
        /// </summary>
        internal static string folder_iikofrontlogs {
            get {
                return ResourceManager.GetString("folder_iikofrontlogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Plugin.Front.Alpos
        ///Plugin.Front.Api.CashierName
        ///Plugin.Front.Api.CustomerScreen
        ///Plugin.Front.Api.Hrs
        ///Plugin.Front.Api.Orderman
        ///Plugin.Front.Api.PartnerTech
        ///Plugin.Front.ApplicationLauncher
        ///Plugin.Front.AtolFiscalRegister
        ///Plugin.Front.Automation
        ///Plugin.Front.CardSlideEmulator
        ///Plugin.Front.Delivery
        ///Plugin.Front.DeliveryExternalCourierService
        ///Plugin.Front.DeliverySms
        ///Plugin.Front.DiscountCardsAdapter
        ///Plugin.Front.Edelweiss
        ///Plugin.Front.EgaisProxy
        ///Plugin.Front.Epitome
        ///Plugin.Front.EventJournalL [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string iiko_plugins {
            get {
                return ResourceManager.GetString("iiko_plugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///netsh http add urlacl url=http://+:8105/ user=Все
        ///netsh http add urlacl url=http://+:8100/ user=Все
        ///netsh http add urlacl url=http://+:8080/ user=Все
        ///netsh http add urlacl url=https://+:443/ user=Все
        ///netsh http add urlacl url=http://+:8506/ user=Все
        ///netsh http add urlacl url=http://+:9100/ user=Все
        ///netsh http add urlacl url=http://+:9000/ user=Все
        ///netsh http add urlacl url=http://+:9001/ user=Все
        ///netsh http add urlacl url=http://+:9002/ user=Все
        ///netsh http add urlacl url=http://+:9003/ u [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string iiko_ports {
            get {
                return ResourceManager.GetString("iiko_ports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 6.0.1130.0
        ///6.0.2026.0
        ///6.0.3011.0
        ///6.0.4006.0
        ///6.0.5024.0
        ///6.1.1136.0
        ///6.1.2013.0
        ///6.1.3013.0
        ///6.1.4011.0
        ///6.2.1126.0
        ///6.2.2015.0
        ///6.2.3012.0
        ///6.2.4011.0
        ///6.3.2008.0
        ///6.3.3014.0
        ///6.4.1746.0
        ///6.4.2014.0
        ///6.4.3013.0
        ///7.0.6022.0
        ///7.0.7007.0
        ///7.1.6025.0
        ///7.1.7014.0
        ///7.2.6014.0
        ///7.2.7013.0
        ///7.2.7014.0
        ///7.2.8006.0
        ///7.3.6017.0
        ///7.3.7011.0
        ///7.4.6020.0
        ///7.4.7012.0
        ///7.5.6019.0
        ///7.6.6015.0
        ///7.6.7003.0
        ///7.7.6020.0.
        /// </summary>
        internal static string iiko_versions {
            get {
                return ResourceManager.GetString("iiko_versions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///chcp 65001
        ///cd C:/
        ///mkdir iiko_Distr
        ///cd C:/iiko_Distr
        ///set exepath=%programdata%/CLEAR_bat/bin/bin
        ///set home=%programdata%/CLEAR_bat
        ///set temp=C:/iikoDistr
        ///:m1
        ///Echo *-----------------------------------------------------*
        ///Echo *- Install plugin: -----------------------------------*
        ///Echo *- Resto.Front.Api.DigitalSignage ----------------  1 *
        ///Echo *- Resto.Front.Api.LoyaltyPlantPlugin ------------  2 *
        ///Echo *- Resto.Front.Api.SberbankPlugin ----------------  3 *
        ///Echo *- Plugin.Front.Sbrf Ст [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string install_plugins {
            get {
                return ResourceManager.GetString("install_plugins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///chcp 65001
        ///Echo &quot;Удаление обновлений Windows мешающих работе QR кодов на принтерах&quot;
        ///wusa /uninstall /kb:5000803
        ///wusa /uninstall /kb:5000802
        ///ECHO &quot;Готово&quot;
        ///exit.
        /// </summary>
        internal static string qr_win_upd {
            get {
                return ResourceManager.GetString("qr_win_upd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///rmdir /S/Q &quot;%programdata%/CLEAR_bat/&quot;
        ///exit.
        /// </summary>
        internal static string rmdir {
            get {
                return ResourceManager.GetString("rmdir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///cd &quot;C:\Program Files\iiko\iikoRMS\Front.Net\&quot;
        ///start iikoFront.Net.exe
        ///exit.
        /// </summary>
        internal static string start_front {
            get {
                return ResourceManager.GetString("start_front", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///chcp 65001
        ///Echo Отключить обновление Windows
        ///net stop wuauserv
        ///sc config wuauserv start=disabled
        ///:checkPrivileges
        ///NET FILE 1&gt;NUL 2&gt;NUL
        ///if &apos;%errorlevel%&apos; == &apos;0&apos; ( goto gotPrivileges ) else ( goto getPrivileges )
        ///
        ///:getPrivileges
        ///if &apos;%1&apos;==&apos;ELEV&apos; (echo ELEV &amp; shift /1 &amp; goto gotPrivileges)
        ///
        ///setlocal DisableDelayedExpansion
        ///set &quot;batchPath=%~0&quot;
        ///setlocal EnableDelayedExpansion
        ///ECHO Set UAC = CreateObject^(&quot;Shell.Application&quot;^) &gt; &quot;%temp%\OEgetPrivileges.vbs&quot;
        ///ECHO args = &quot;ELEV &quot; &gt;&gt; &quot;%temp%\ [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string stop_service {
            get {
                return ResourceManager.GetString("stop_service", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на @echo off
        ///chcp 65001
        ///Исправление неполадок синхронизации времени
        ///cd C:/Windows/System32
        ///ECHO Останавливаем службу времени, если запущена.
        ///net stop w32time
        ///ECHO Отключаем режим отладки
        ///w32tm /debug /disable
        ///ECHO Удаляем регистрацию службы
        ///w32tm /unregister
        ///ECHO По новому регистрируем службу
        ///w32tm /register
        ///ECHO Запускаю службу
        ///net start w32time
        ///Запускаю синхронизацию
        ///w32tm /resync
        ///echo Синхронизация завершена
        ///ECHO &quot;Готово&quot;
        ///exit.
        /// </summary>
        internal static string time_sync {
            get {
                return ResourceManager.GetString("time_sync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на chcp 65001
        ///@echo off
        ///cd %programdata%/CLEAR_bat
        ///mkdir temp
        ///cd ./temp
        ///mkdir update_%date%
        ///cd ./update_%date%&quot;
        ///%programdata%/CLEAR_bat/bin/curl.exe -LJO &quot;https://github.com/ru2mix/ru2mix/raw/main/update_c.zip&quot;
        ///mkdir temp
        ///cd %programdata%/CLEAR_bat/temp/update_%date%/temp&quot;
        ///%programdata%/CLEAR_bat/bin/unzip.exe &quot;%programdata%/CLEAR_bat/temp/update_%date%/update_c.zip&quot;
        ///xcopy &quot;%programdata%/CLEAR_bat/temp/update_%date%/temp&quot; &quot;%programdata%/CLEAR_bat&quot; /E/I/Y
        ///cd &quot;%programdata%/CLEAR_bat/&quot;
        ///rmdir /S/Q &quot;% [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string update {
            get {
                return ResourceManager.GetString("update", resourceCulture);
            }
        }
    }
}
